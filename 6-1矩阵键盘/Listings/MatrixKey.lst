C51 COMPILER V9.54   MATRIXKEY                                                             08/13/2024 14:52:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MATRIXKEY
OBJECT MODULE PLACED IN .\Objects\MatrixKey.obj
COMPILER INVOKED BY: F:\keli5\C51\BIN\C51.EXE MatrixKey.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\M
                    -atrixKey.lst) TABS(2) OBJECT(.\Objects\MatrixKey.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          /**
   4            * @brief  矩阵键盘读取按键键码
   5            * @param  无
   6            * @retval KeyNumber 按下按键的键码值
   7                如果按键按下不放 程序会停留在此函数，松手的一瞬间，返回按键键码，没有按键按下时，返回0
   8            */
   9          unsigned char MatrixKey()
  10          {
  11   1        unsigned char KeyNumber=0;
  12   1        //1.按列扫描 先固定第一列 然后扫描1234行 如果监测到按键按下就返回那个按键对应的数字
  13   1        P1=0xFF;//先初始化所有P1的值（即P1_0、P1_1、P1_2、P1_3、P1_4、P1_5、P1_6、P1_7）为1
  14   1        P1_3=0;//固定第一列
  15   1        if(P1_7==0){Delay(20);while(P1_7==0); Delay(20);KeyNumber=1;}//延时来消除按键抖动
  16   1        if(P1_6==0){Delay(20);while(P1_6==0); Delay(20);KeyNumber=5;}//延时来消除按键抖动
  17   1        if(P1_5==0){Delay(20);while(P1_5==0); Delay(20);KeyNumber=9;}//延时来消除按键抖动
  18   1        if(P1_4==0){Delay(20);while(P1_4==0); Delay(20);KeyNumber=13;}//延时来消除按键抖动
  19   1        
  20   1        //2.按列扫描 先固定第二列 然后扫描1234行 如果监测到按键按下就返回那个按键对应的数字
  21   1        P1=0xFF;//先初始化所有P1的值（即P1_0、P1_1、P1_2、P1_3、P1_4、P1_5、P1_6、P1_7）为1
  22   1        P1_2=0;//固定第二列
  23   1        if(P1_7==0){Delay(20);while(P1_7==0); Delay(20);KeyNumber=2;}//延时来消除按键抖动
  24   1        if(P1_6==0){Delay(20);while(P1_6==0); Delay(20);KeyNumber=6;}//延时来消除按键抖动
  25   1        if(P1_5==0){Delay(20);while(P1_5==0); Delay(20);KeyNumber=10;}//延时来消除按键抖动
  26   1        if(P1_4==0){Delay(20);while(P1_4==0); Delay(20);KeyNumber=14;}//延时来消除按键抖动
  27   1        
  28   1        //3.按列扫描 先固定第三列 然后扫描1234行 如果监测到按键按下就返回那个按键对应的数字
  29   1        P1=0xFF;//先初始化所有P1的值（即P1_0、P1_1、P1_2、P1_3、P1_4、P1_5、P1_6、P1_7）为1
  30   1        P1_1=0;//固定第三列
  31   1        if(P1_7==0){Delay(20);while(P1_7==0); Delay(20);KeyNumber=3;}//延时来消除按键抖动
  32   1        if(P1_6==0){Delay(20);while(P1_6==0); Delay(20);KeyNumber=7;}//延时来消除按键抖动
  33   1        if(P1_5==0){Delay(20);while(P1_5==0); Delay(20);KeyNumber=11;}//延时来消除按键抖动
  34   1        if(P1_4==0){Delay(20);while(P1_4==0); Delay(20);KeyNumber=15;}//延时来消除按键抖动
  35   1        
  36   1        //4.按列扫描 先固定第四列 然后扫描1234行 如果监测到按键按下就返回那个按键对应的数字
  37   1        P1=0xFF;//先初始化所有P1的值（即P1_0、P1_1、P1_2、P1_3、P1_4、P1_5、P1_6、P1_7）为1
  38   1        P1_0=0;//固定第四 列
  39   1        if(P1_7==0){Delay(20);while(P1_7==0); Delay(20);KeyNumber=4;}//延时来消除按键抖动
  40   1        if(P1_6==0){Delay(20);while(P1_6==0); Delay(20);KeyNumber=8;}//延时来消除按键抖动
  41   1        if(P1_5==0){Delay(20);while(P1_5==0); Delay(20);KeyNumber=12;}//延时来消除按键抖动
  42   1        if(P1_4==0){Delay(20);while(P1_4==0); Delay(20);KeyNumber=16;}//延时来消除按键抖动
  43   1        
  44   1        return KeyNumber;
  45   1      
  46   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
C51 COMPILER V9.54   MATRIXKEY                                                             08/13/2024 14:52:59 PAGE 2   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
